@import "../../patternfly-utilities";

.pf-c-table {

  /* stylelint-disable */
  @at-root {
    body {
      padding: 20px;
      background: #ddd;
    }
  }

  // ============================================================ //
  // Start non-conformant variables
  //
  // these variables do not conform to guidelines as styling targets individual elements
  // this is purposeful and necessary to avoid adding selectors to each td/th
  // ============================================================ //

  // Base
  --pf-c-table--BackgroundColor:                              var(--pf-global--BackgroundColor--light-100);
  --pf-c-table--BorderColor:                                  var(--pf-global--BorderColor--light-200);
  --pf-c-table--BorderWidth:                                  var(--pf-global--BorderWidth--sm);
  --pf-c-table--FontWeight:                                   var(--pf-global--FontWeight--normal);

  // Th
  --pf-c-table-th--FontSize:                                  var(--pf-global--FontSize--sm);
  --pf-c-table-th--FontFamily:                                var(--pf-global--FontFamily--sans-serif);
  --pf-c-table-th--LineHeight:                                var(--pf-global--LineHeight--md);
  --pf-c-table-th--PaddingY:                                  var(--pf-global--spacer--md);

  // Td
  --pf-c-table-td--FontSize:                                  var(--pf-global--FontSize--md);
  --pf-c-table-td--PaddingY:                                  var(--pf-global--spacer--xl);

  // Th / td shared variables
  // Padding vars must be individual as they are contextually reset
  --pf-c-table-cell--PaddingTop:                              var(--pf-global--spacer--md);
  --pf-c-table-cell--PaddingRight:                            var(--pf-global--spacer--md);
  --pf-c-table-cell--PaddingBottom:                           var(--pf-global--spacer--md);
  --pf-c-table-cell--PaddingLeft:                             var(--pf-global--spacer--md);
  --pf-c-table-cell--FontSize:                                var(--pf-global--FontSize--md);
  --pf-c-table-cell--first-child--PaddingLeft:                var(--pf-global--spacer--xl);
  --pf-c-table-cell--last-child--PaddingRight:                var(--pf-global--spacer--xl);

  // ============================================================ //
  // End non-conformant variables
  // ============================================================ //

  // Table cell - toggle
  --pf-c-table__toggle--PaddingTop:                           #{pf-size-prem(26px)};
  --pf-c-table__toggle--PaddingRight:                         var(--pf-global--spacer--sm);

  // Table cell - check
  --pf-c-table__check--PaddingTop:                            #{pf-size-prem(22px)};
  --pf-c-table__check--tbody--PaddingTop:                     #{pf-size-prem(37px)};

  // Table cell - action
  --pf-c-table__action--PaddingTop:                           0;
  --pf-c-table__action--PaddingBottom:                        0;
  --pf-c-table__action--PaddingLeft:                          var(--pf-global--spacer--sm);
  --pf-c-table__action--m-compact--PaddingTop:                20px;
  --pf-c-table__action--m-compact--PaddingBottom:             0;


  // Expandable row
  // hardcoding to match design spec
  --pf-c-table__expandable-row--Transition:                   var(--pf-global--Transition);
  --pf-c-table__expandable-row--before--Width:                var(--pf-global--BorderWidth--lg);
  --pf-c-table__expandable-row--before--BackgroundColor:      var(--pf-global--active-color--100);
  --pf-c-table__expandable-row--before--ZIndex:               var(--pf-global--ZIndex--sm);

  // Table rows
  // Padding vars must be individual as they are contextually reset
  --pf-c-table__expandable-row-content--PaddingTop:           0;
  --pf-c-table__expandable-row-content--PaddingRight:         0;
  --pf-c-table__expandable-row-content--PaddingBottom:        0;
  --pf-c-table__expandable-row-content--PaddingLeft:          0;
  --pf-c-table__expandable-row-content--MaxHeight:            #{pf-size-prem(600px)};
  --pf-c-table__expandable-row-content--Transition:           var(--pf-global--Transition);
  --pf-c-table__expandable-row-content--m-expanded--PaddingY: var(--pf-global--spacer--xl);

  // Sort indicator
  --pf-c-table__sort-indicator--MarginLeft:                   var(--pf-global--spacer--md);
  --pf-c-table__sort-indicator--Color:                        var(--pf-global--disabled-color--200);

  // Icon inline
  --pf-c-table__icon-inline--MarginRight:                     var(--pf-global--spacer--sm);

  // Nested table
  --pf-c-table--nested--first-child--PaddingLeft:             var(--pf-global--spacer--3xl);
  --pf-c-table--nested--last-child--PaddingRight:             var(--pf-global--spacer--3xl);


  // ============================================================ //
  // Modifiers
  // ============================================================ //

  // Modifier - Compact table
  --pf-c-table--m-compact-th--PaddingY:                       var(--pf-global--spacer--md);
  --pf-c-table--m-compact-cell--PaddingY:                     var(--pf-global--spacer--sm);
  --pf-c-table--m-compact-cell--PaddingX:                     var(--pf-global--spacer--sm);
  --pf-c-table--m-compact-cell--first-child--PaddingLeft:     var(--pf-global--spacer--xl);
  --pf-c-table--m-compact-cell--last-child--PaddingRight:     var(--pf-global--spacer--xl);
  --pf-c-table--m-compact--FontSize:                          var(--pf-global--FontSize--sm);
  --pf-c-table__compound-expansion-toggle--BorderTop--BorderWidth:      var(--pf-global--BorderWidth--lg);
  --pf-c-table__compound-expansion-toggle--BorderTop--BorderColor:      var(--pf-global--primary-color--100);
  --pf-c-table__compound-expansion-toggle--BorderX--BorderWidth:        var(--pf-global--BorderWidth--sm);
  --pf-c-table__compound-expansion-toggle--BorderX--BorderColor:        var(--pf-global--BorderColor--light-200);
  --pf-c-table__compound-expansion-toggle--BorderBottom--BorderWidth:   var(--pf-global--BorderWidth--sm);
  --pf-c-table__compound-expansion-toggle--BorderBottom--BorderColor:   var(--pf-global--BackgroundColor--100);
  --pf-c-table__compound-expansion-toggle--BorderBottom--responsive--BorderWidth: var(--pf-global--BorderWidth--lg);
  --pf-c-table__compound-expansion-toggle--BorderBottom--responsive--BorderColor: var(--pf-global--active-color--100);

  // Modifier - Toggle
  --pf-c-table--m-toggle--Transition:                         var(--pf-global--Transition);

  // Modifier - Fit content
  --pf-c-table--m-fit-content--PaddingRight:                  var(--pf-global--spacer--sm);
  --pf-c-table--m-fit-content--PaddingLeft:                   var(--pf-global--spacer--sm);

  // Modifier - Expandable row expanded
  --pf-c-table__expandable-row--m-expanded--BoxShadow:        var(--pf-global--BoxShadow--md-bottom);

  // Modifier - Sort descending
  --pf-c-table__sort--sorted--Color:                          var(--pf-global--active-color--100);
  --pf-c-table__sort--sorted--BorderColor:                    var(--pf-global--active-color--100);
  --pf-c-table__sort--sorted--BorderWidth:                    var(--pf-global--BorderWidth--md);

  /* stylelint-enable */

  // Base
  width: 100%;
  background-color: var(--pf-c-table--BackgroundColor);

  // Standard table row (non-expandable)
  // exclude expandable rows
  tr:not(.pf-c-table__expandable-row) {
    // set position relative for absolutely positioned elements in responsive view
    position: relative;
    border-bottom: var(--pf-c-table--BorderWidth) solid var(--pf-c-table--BorderColor);
  }

  // Table row
  tr > * {
    // each value must be set individually as each of these values may be reset contextually
    padding: var(--pf-c-table-cell--PaddingTop) var(--pf-c-table-cell--PaddingRight) var(--pf-c-table-cell--PaddingBottom) var(--pf-c-table-cell--PaddingLeft);
    font-size: var(--pf-c-table-cell--FontSize);
    font-weight: var(--pf-c-table--FontWeight);

    // First child padding left
    &:first-child {
      --pf-c-table-cell--PaddingLeft: var(--pf-c-table-cell--first-child--PaddingLeft);
    }

    // Last child padding right
    &:last-child {
      --pf-c-table-cell--PaddingRight: var(--pf-c-table-cell--last-child--PaddingRight);
    }
  }

  // Table header cell
  thead {
    --pf-c-table-cell--PaddingTop: var(--pf-c-table-th--PaddingY);
    --pf-c-table-cell--PaddingBottom: var(--pf-c-table-th--PaddingY);
    --pf-c-table-cell--FontSize: var(--pf-c-table-th--FontSize);

    white-space: nowrap;
    vertical-align: top;
  }

  // Table body cell
  tbody {
    --pf-c-table-cell--PaddingTop: var(--pf-c-table-td--PaddingY);
    --pf-c-table-cell--PaddingBottom: var(--pf-c-table-td--PaddingY);
    --pf-c-table-cell--FontSize: var(--pf-c-table-td--FontSize);
  }
}

// REMOVE PADDING FOR SPECIAL CELLS THAT CONTAIN BUTTONS
// ==================================================================
// unset padding, button adds appropriate padding
/* stylelint-disable */
.pf-c-table {

  // unset padding for these cells as the button within provides padding
  .pf-c-table__sort,
  .pf-c-table__compound-expansion-toggle {
    &,
    &:first-child,
    &:last-child {
      // explicitly reset padding rather than css variable, as the button within uses the variable
      padding: 0;
    }

    .pf-c-button {
      width: 100%;
      padding: var(--pf-c-table-cell--PaddingTop) var(--pf-c-table-cell--PaddingRight) var(--pf-c-table-cell--PaddingBottom) var(--pf-c-table-cell--PaddingLeft);
      font-size: inherit;
      font-weight: inherit;
      text-align: left;
    }
  }
}
/* stylelint-enable */

// Toggle, check, action - minimize width and padding.
.pf-c-table .pf-c-table__toggle,
.pf-c-table .pf-c-table__check,
.pf-c-table .pf-c-table__action {
  width: 1%;
}

// Toggle table cell
// ==================================================================
.pf-c-table__toggle {
  --pf-c-table-cell--PaddingTop: var(--pf-c-table__toggle--PaddingTop);
  --pf-c-table-cell--PaddingRight: 0;
  --pf-c-table-cell--PaddingBottom: 0;
  --pf-c-table-cell--PaddingLeft: 0;

  vertical-align: top;

  // Toggle button icon
  .pf-c-button > * {
    transition: var(--pf-c-table--m-toggle--Transition);
    transform: rotate(-90deg);
  }

  // Rotate toggle button icon
  .pf-c-button.pf-m-expanded > * {
    transform: rotate(0deg);
  }

  svg {
    pointer-events: none;
  }
}

// Check table cell
// ==================================================================
.pf-c-table__check {
  --pf-c-table-cell--PaddingTop: var(--pf-c-table__check--PaddingTop);
  --pf-c-table-cell--PaddingBottom: 0;

  &,
  > * {
    vertical-align: top;
  }

  tbody & {
    --pf-c-table-cell--PaddingTop: var(--pf-c-table__check--tbody--PaddingTop);
  }
}

// Table action cell
// ==================================================================
.pf-c-table__action {
  --pf-c-table-cell--PaddingTop: var(--pf-c-table__action--PaddingTop);
  --pf-c-table-cell--PaddingBottom: var(--pf-c-table__action--PaddingTop);
  --pf-c-table-cell--PaddingLeft: var(--pf-c-table__action--PaddingLeft);

  vertical-align: middle;
}

// Table toggle compount expansion
// using this method because the button may not always be full height of the parent cell if siblings wrap
// ==================================================================
.pf-c-table__compound-expansion-toggle {
  position: relative;

  &::before,
  &::after {
    position: absolute;
    content: "";
  }

  &::before {
    top: calc(var(--pf-c-table--BorderWidth) * -1);
    right: 0;
    left: 0;
    z-index: 99;
    border-top: var(--pf-c-table__compound-expansion-toggle--BorderTop--BorderWidth) solid transparent;
  }

  &::after {
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    border-right: var(--pf-c-table__compound-expansion-toggle--BorderX--BorderWidth) solid transparent;
    border-bottom: none;
    border-left: var(--pf-c-table__compound-expansion-toggle--BorderX--BorderWidth) solid transparent;
  }

  > .pf-c-button {
    z-index: var(--pf-global--ZIndex--xs);
  }

  // border-right-width: var(--pf-c-table__compound-expansion-toggle--BorderX--BorderWidth);
  // border-bottom: var(--pf-c-table__compound-expansion-toggle--BorderBottom--BorderWidth) solid var(--pf-c-table__compound-expansion-toggle--BorderBottom--BorderColor);
  // border-left-width: var(--pf-c-table__compound-expansion-toggle--BorderX--BorderWidth);

  // hide the parent tr when tab is active
  &.pf-m-active {
    border-bottom: var(--pf-c-table--BorderWidth) solid var(--pf-c-table--BackgroundColor);
  }

  &.pf-m-active,
  &:hover {
    &::before {
      border-top-color: var(--pf-c-table__compound-expansion-toggle--BorderTop--BorderColor);
    }

    &::after {
      border-right-color: var(--pf-c-table__compound-expansion-toggle--BorderX--BorderColor);
      border-left-color: var(--pf-c-table__compound-expansion-toggle--BorderX--BorderColor);
    }

    // border-top: var(--pf-c-table__compound-expansion-toggle--BorderTop--BorderWidth) solid var(--pf-c-table__compound-expansion-toggle--BorderTop--BorderColor);
    // border-right: var(--pf-c-table__compound-expansion-toggle--BorderX--BorderWidth) solid var(--pf-c-table__compound-expansion-toggle--BorderX--BorderColor);
    // border-bottom: var(--pf-c-table__compound-expansion-toggle--BorderBottom--BorderWidth) solid var(--pf-c-table__compound-expansion-toggle--BorderBottom--BorderColor);
    // border-left: var(--pf-c-table__compound-expansion-toggle--BorderX--BorderWidth) solid var(--pf-c-table__compound-expansion-toggle--BorderX--BorderColor);
  }

  // &:first-child .pf-m-link {
  //   padding-left: var(--pf-c-table-cell--first-child--PaddingLeft);
  // }
}

// Table sort
// ==================================================================
.pf-c-table__sort {
  &.pf-m-ascending,
  &.pf-m-descending {
    border-bottom: var(--pf-c-table__sort--sorted--BorderWidth) solid var(--pf-c-table__sort--sorted--BorderColor);

    // set button and indicator color
    button,
    .pf-c-table__sort-indicator {
      color: var(--pf-c-table__sort--sorted--Color);
    }
  }
}

// Sort indicator
.pf-c-table__sort-indicator {
  margin-left: var(--pf-c-table__sort-indicator--MarginLeft);

  // set line-height to 1 so it does not adjust height of button
  line-height: 1;
  color: var(--pf-c-table__sort-indicator--Color);
  pointer-events: none;

  .pf-c-table__sort.pf-m-ascending & {
    transform: rotate(0deg);
  }

  .pf-c-table__sort.pf-m-descending & {
    transform: rotate(180deg);
  }
}

// Expandable row
// ==================================================================
.pf-c-table__expandable-row {
  --pf-c-table-cell--PaddingTop: 0;
  --pf-c-table-cell--PaddingBottom: 0;

  position: relative;
  border-bottom: 0 solid transparent;
  box-shadow: 0 0 0 0 transparent;

  &,
  td:first-child::before {
    transition: var(--pf-c-table__expandable-row--Transition);
  }

  // Td
  td {
    position: relative;
  }

  // Border treatment
  // using first child as row does not calculate height appropriately
  td:first-child::before {
    position: absolute;

    // offset top to extend above tr border
    top: calc(var(--pf-c-table--BorderWidth) * -1);
    bottom: calc(var(--pf-c-table--BorderWidth) * -1);
    left: 0;
    z-index: 10;
    width: var(--pf-c-table__expandable-row--before--Width);
    content: "";

    // add border left
    background-color: transparent;
  }

  // Modifier - Expanded tr
  &.pf-m-expanded {
    // reset borders to default values
    border-bottom-color: var(--pf-c-table--BorderColor);
    border-bottom-width: var(--pf-c-table--BorderWidth);
    box-shadow: var(--pf-c-table__expandable-row--m-expanded--BoxShadow);

    td:first-child::before {
      background-color: var(--pf-c-table__expandable-row--before--BackgroundColor);
    }
  }
}

// Expandable row content
// ==================================================================
.pf-c-table__expandable-row-content {
  max-height: 0;

  // set base variables to reset later
  padding: var(--pf-c-table__expandable-row-content--PaddingTop) var(--pf-c-table__expandable-row-content--PaddingRight) var(--pf-c-table__expandable-row-content--PaddingBottom) var(--pf-c-table__expandable-row-content--PaddingLeft);
  overflow: hidden;
  word-break: break-word;
  border-top-color: transparent;
  border-top-width: 0;
  transition: var(--pf-c-table__expandable-row-content--Transition);

  // Modifier on td- Expanded
  .pf-m-expanded & {
    --pf-c-table__expandable-row-content--PaddingTop: var(--pf-c-table__expandable-row-content--m-expanded--PaddingY);
    --pf-c-table__expandable-row-content--PaddingBottom: var(--pf-c-table__expandable-row-content--m-expanded--PaddingY);

    max-height: var(--pf-c-table__expandable-row-content--MaxHeight);
    overflow-y: auto;
  }

  .pf-m-nested-table & {
    --pf-c-table__expandable-row-content--PaddingTop: 0;
    --pf-c-table__expandable-row-content--PaddingRight: 0;
    --pf-c-table__expandable-row-content--PaddingBottom: 0;
    --pf-c-table__expandable-row-content--PaddingLeft: 0;
  }

  /* stylelint-disable */
  &::-webkit-scrollbar {
    display: none;
  }
  /* stylelint-enable */
}

.pf-c-table .pf-m-nested-table {
  > td {
    padding: 0;
  }

  .pf-c-table__expandable-row {
    //
  }

  .pf-c-table__expandable-row-content {
    //
  }
}

// Nested table
// ==================================================================
.pf-c-table .pf-c-table {
  tr > * {
    // First child padding left
    &:first-child {
      --pf-c-table-cell--PaddingLeft: var(--pf-c-table--nested--first-child--PaddingLeft);
    }

    // Last child padding right
    &:last-child {
      --pf-c-table-cell--PaddingRight: var(--pf-c-table--nested--last-child--PaddingRight);
    }
  }
}

// Compact table
// ==================================================================
.pf-c-table.pf-m-compact {
  // Thead only
  thead {
    --pf-c-table--m-compact-cell--PaddingY: var(--pf-c-table--m-compact-th--PaddingY);
    --pf-c-table--m-compact-cell--PaddingY: var(--pf-c-table--m-compact-th--PaddingY);
  }

  // Tbody only
  tbody {
    --pf-c-table--BorderWidth: 0;
    --pf-c-table--BorderColor: transparent;

    tr:first-child > * {
      --pf-c-table-cell--PaddingTop: calc(var(--pf-c-table--m-compact-cell--PaddingY) * 2);
    }

    tr:last-child > * {
      --pf-c-table-cell--PaddingBottom: calc(var(--pf-c-table--m-compact-cell--PaddingY) * 2);
    }
  }

  tr > * {
    --pf-c-table-cell--PaddingTop: var(--pf-c-table--m-compact-cell--PaddingY);
    --pf-c-table-cell--PaddingRight: var(--pf-c-table--m-compact-cell--PaddingX);
    --pf-c-table-cell--PaddingBottom: var(--pf-c-table--m-compact-cell--PaddingY);
    --pf-c-table-cell--PaddingLeft: var(--pf-c-table--m-compact-cell--PaddingX);
    --pf-c-table-cell--FontSize: var(--pf-c-table--m-compact--FontSize);
  }

  .pf-c-table__action {
    --pf-c-table-cell--PaddingTop: var(--pf-c-table__action--PaddingTop);
    --pf-c-table-cell--PaddingBottom: var(--pf-c-table__action--PaddingTop);
    --pf-c-table-cell--PaddingLeft: var(--pf-c-table__action--PaddingLeft);
  }
}

// Icon inline
// replace this when inline text with icon is in place
.pf-c-table__icon-inline {
  display: flex;
  align-items: center;

  > :not(:last-child) {
    margin-right: var(--pf-c-table__icon-inline--MarginRight);
  }
}

// Modifier - fit-content
.pf-c-table .pf-m-fit-content {
  // limit width and padding, fit contents of cell
  width: 1%;
  white-space: nowrap;
}

// Modifier - Wrap
.pf-c-table .pf-m-wrap {
  white-space: normal;
}

// Modifier - Width
/* stylelint-disable */
.pf-c-table [class*="pf-m-width-"] {
  table-layout: fixed;
}

.pf-c-table .pf-m-width-10 {
  width: 10%;
}

.pf-c-table .pf-m-width-15 {
  width: 15%;
}

.pf-c-table .pf-m-width-20 {
  width: 20%;
}

.pf-c-table .pf-m-width-25 {
  width: 25%;
}

.pf-c-table .pf-m-width-30 {
  width: 30%;
}

.pf-c-table .pf-m-width-35 {
  width: 35%;
}

.pf-c-table .pf-m-width-40 {
  width: 40%;
}

.pf-c-table .pf-m-width-45 {
  width: 45%;
}

.pf-c-table .pf-m-width-50 {
  width: 50%;
}

.pf-c-table .pf-m-width-60 {
  width: 60%;
}

.pf-c-table .pf-m-width-70 {
  width: 70%;
}

.pf-c-table .pf-m-width-80 {
  width: 80%;
}

.pf-c-table .pf-m-width-90 {
  width: 90%;
}

.pf-c-table .pf-m-width-max {
  width: 100%;
}
